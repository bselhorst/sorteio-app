"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.io = exports["default"] = exports.connect = xt;
exports.protocol = exports.WebTransport = exports.Socket = exports.XHR = exports.NodeXHR = exports.WebSocket = exports.NodeWebSocket = exports.Manager = exports.Fetch = void 0;

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/*!
 * Socket.IO v4.8.1
 * (c) 2014-2024 Guillermo Rauch
 * Released under the MIT License.
 */
var t = Object.create(null);
t.open = "0", t.close = "1", t.ping = "2", t.pong = "3", t.message = "4", t.upgrade = "5", t.noop = "6";
var s = Object.create(null);
Object.keys(t).forEach(function (i) {
  s[t[i]] = i;
});

var i = {
  type: "error",
  data: "parser error"
},
    e = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === Object.prototype.toString.call(Blob),
    n = "function" == typeof ArrayBuffer,
    r = function r(t) {
  return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer instanceof ArrayBuffer;
},
    o = function o(_ref, _o, c) {
  var s = _ref.type,
      i = _ref.data;
  return e && i instanceof Blob ? _o ? c(i) : h(i, c) : n && (i instanceof ArrayBuffer || r(i)) ? _o ? c(i) : h(new Blob([i]), c) : c(t[s] + (i || ""));
},
    h = function h(t, s) {
  var i = new FileReader();
  return i.onload = function () {
    var t = i.result.split(",")[1];
    s("b" + (t || ""));
  }, i.readAsDataURL(t);
};

function c(t) {
  return t instanceof Uint8Array ? t : t instanceof ArrayBuffer ? new Uint8Array(t) : new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
}

var a;
var u = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    f = "undefined" == typeof Uint8Array ? [] : new Uint8Array(256);

for (var _t2 = 0; _t2 < 64; _t2++) {
  f[u.charCodeAt(_t2)] = _t2;
}

var l = "function" == typeof ArrayBuffer,
    d = function d(t, e) {
  if ("string" != typeof t) return {
    type: "message",
    data: y(t, e)
  };
  var n = t.charAt(0);
  if ("b" === n) return {
    type: "message",
    data: p(t.substring(1), e)
  };
  return s[n] ? t.length > 1 ? {
    type: s[n],
    data: t.substring(1)
  } : {
    type: s[n]
  } : i;
},
    p = function p(t, s) {
  if (l) {
    var _i = function (t) {
      var s,
          i,
          e,
          n,
          r,
          o = .75 * t.length,
          h = t.length,
          c = 0;
      "=" === t[t.length - 1] && (o--, "=" === t[t.length - 2] && o--);
      var a = new ArrayBuffer(o),
          u = new Uint8Array(a);

      for (s = 0; s < h; s += 4) {
        i = f[t.charCodeAt(s)], e = f[t.charCodeAt(s + 1)], n = f[t.charCodeAt(s + 2)], r = f[t.charCodeAt(s + 3)], u[c++] = i << 2 | e >> 4, u[c++] = (15 & e) << 4 | n >> 2, u[c++] = (3 & n) << 6 | 63 & r;
      }

      return a;
    }(t);

    return y(_i, s);
  }

  return {
    base64: !0,
    data: t
  };
},
    y = function y(t, s) {
  return "blob" === s ? t instanceof Blob ? t : new Blob([t]) : t instanceof ArrayBuffer ? t : t.buffer;
},
    b = String.fromCharCode(30);

function g() {
  return new TransformStream({
    transform: function transform(t, s) {
      !function (t, s) {
        e && t.data instanceof Blob ? t.data.arrayBuffer().then(c).then(s) : n && (t.data instanceof ArrayBuffer || r(t.data)) ? s(c(t.data)) : o(t, !1, function (t) {
          a || (a = new TextEncoder()), s(a.encode(t));
        });
      }(t, function (i) {
        var e = i.length;
        var n;
        if (e < 126) n = new Uint8Array(1), new DataView(n.buffer).setUint8(0, e);else if (e < 65536) {
          n = new Uint8Array(3);

          var _t3 = new DataView(n.buffer);

          _t3.setUint8(0, 126), _t3.setUint16(1, e);
        } else {
          n = new Uint8Array(9);

          var _t4 = new DataView(n.buffer);

          _t4.setUint8(0, 127), _t4.setBigUint64(1, BigInt(e));
        }
        t.data && "string" != typeof t.data && (n[0] |= 128), s.enqueue(n), s.enqueue(i);
      });
    }
  });
}

var w;

function v(t) {
  return t.reduce(function (t, s) {
    return t + s.length;
  }, 0);
}

function m(t, s) {
  if (t[0].length === s) return t.shift();
  var i = new Uint8Array(s);
  var e = 0;

  for (var _n = 0; _n < s; _n++) {
    i[_n] = t[0][e++], e === t[0].length && (t.shift(), e = 0);
  }

  return t.length && e < t[0].length && (t[0] = t[0].slice(e)), i;
}

function k(t) {
  if (t) return function (t) {
    for (var s in k.prototype) {
      t[s] = k.prototype[s];
    }

    return t;
  }(t);
}

k.prototype.on = k.prototype.addEventListener = function (t, s) {
  return this.t = this.t || {}, (this.t["$" + t] = this.t["$" + t] || []).push(s), this;
}, k.prototype.once = function (t, s) {
  function i() {
    this.off(t, i), s.apply(this, arguments);
  }

  return i.fn = s, this.on(t, i), this;
}, k.prototype.off = k.prototype.removeListener = k.prototype.removeAllListeners = k.prototype.removeEventListener = function (t, s) {
  if (this.t = this.t || {}, 0 == arguments.length) return this.t = {}, this;
  var i,
      e = this.t["$" + t];
  if (!e) return this;
  if (1 == arguments.length) return delete this.t["$" + t], this;

  for (var n = 0; n < e.length; n++) {
    if ((i = e[n]) === s || i.fn === s) {
      e.splice(n, 1);
      break;
    }
  }

  return 0 === e.length && delete this.t["$" + t], this;
}, k.prototype.emit = function (t) {
  this.t = this.t || {};

  for (var s = new Array(arguments.length - 1), i = this.t["$" + t], e = 1; e < arguments.length; e++) {
    s[e - 1] = arguments[e];
  }

  if (i) {
    e = 0;

    for (var n = (i = i.slice(0)).length; e < n; ++e) {
      i[e].apply(this, s);
    }
  }

  return this;
}, k.prototype.emitReserved = k.prototype.emit, k.prototype.listeners = function (t) {
  return this.t = this.t || {}, this.t["$" + t] || [];
}, k.prototype.hasListeners = function (t) {
  return !!this.listeners(t).length;
};
var A = "function" == typeof Promise && "function" == typeof Promise.resolve ? function (t) {
  return Promise.resolve().then(t);
} : function (t, s) {
  return s(t, 0);
},
    E = "undefined" != typeof self ? self : "undefined" != typeof window ? window : Function("return this")();

function O(t) {
  for (var _len = arguments.length, s = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    s[_key - 1] = arguments[_key];
  }

  return s.reduce(function (s, i) {
    return t.hasOwnProperty(i) && (s[i] = t[i]), s;
  }, {});
}

var _ = E.setTimeout,
    j = E.clearTimeout;

function x(t, s) {
  s.useNativeTimers ? (t.setTimeoutFn = _.bind(E), t.clearTimeoutFn = j.bind(E)) : (t.setTimeoutFn = E.setTimeout.bind(E), t.clearTimeoutFn = E.clearTimeout.bind(E));
}

function B() {
  return Date.now().toString(36).substring(3) + Math.random().toString(36).substring(2, 5);
}

var C =
/*#__PURE__*/
function (_Error) {
  _inherits(C, _Error);

  function C(t, s, i) {
    var _this;

    _classCallCheck(this, C);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(C).call(this, t)), _this.description = s, _this.context = i, _this.type = "TransportError";
    return _this;
  }

  return C;
}(_wrapNativeSuper(Error));

var T =
/*#__PURE__*/
function (_k) {
  _inherits(T, _k);

  function T(t) {
    var _this2;

    _classCallCheck(this, T);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(T).call(this)), _this2.writable = !1, x(_assertThisInitialized(_this2), t), _this2.opts = t, _this2.query = t.query, _this2.socket = t.socket, _this2.supportsBinary = !t.forceBase64;
    return _this2;
  }

  _createClass(T, [{
    key: "onError",
    value: function onError(t, s, i) {
      return _get(_getPrototypeOf(T.prototype), "emitReserved", this).call(this, "error", new C(t, s, i)), this;
    }
  }, {
    key: "open",
    value: function open() {
      return this.readyState = "opening", this.doOpen(), this;
    }
  }, {
    key: "close",
    value: function close() {
      return "opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this;
    }
  }, {
    key: "send",
    value: function send(t) {
      "open" === this.readyState && this.write(t);
    }
  }, {
    key: "onOpen",
    value: function onOpen() {
      this.readyState = "open", this.writable = !0, _get(_getPrototypeOf(T.prototype), "emitReserved", this).call(this, "open");
    }
  }, {
    key: "onData",
    value: function onData(t) {
      var s = d(t, this.socket.binaryType);
      this.onPacket(s);
    }
  }, {
    key: "onPacket",
    value: function onPacket(t) {
      _get(_getPrototypeOf(T.prototype), "emitReserved", this).call(this, "packet", t);
    }
  }, {
    key: "onClose",
    value: function onClose(t) {
      this.readyState = "closed", _get(_getPrototypeOf(T.prototype), "emitReserved", this).call(this, "close", t);
    }
  }, {
    key: "pause",
    value: function pause(t) {}
  }, {
    key: "createUri",
    value: function createUri(t) {
      var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return t + "://" + this.i() + this.o() + this.opts.path + this.h(s);
    }
  }, {
    key: "i",
    value: function i() {
      var t = this.opts.hostname;
      return -1 === t.indexOf(":") ? t : "[" + t + "]";
    }
  }, {
    key: "o",
    value: function o() {
      return this.opts.port && (this.opts.secure && Number(443 !== this.opts.port) || !this.opts.secure && 80 !== Number(this.opts.port)) ? ":" + this.opts.port : "";
    }
  }, {
    key: "h",
    value: function h(t) {
      var s = function (t) {
        var s = "";

        for (var _i2 in t) {
          t.hasOwnProperty(_i2) && (s.length && (s += "&"), s += encodeURIComponent(_i2) + "=" + encodeURIComponent(t[_i2]));
        }

        return s;
      }(t);

      return s.length ? "?" + s : "";
    }
  }]);

  return T;
}(k);

var N =
/*#__PURE__*/
function (_T) {
  _inherits(N, _T);

  function N() {
    var _this3;

    _classCallCheck(this, N);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(N).apply(this, arguments)), _this3.u = !1;
    return _this3;
  }

  _createClass(N, [{
    key: "doOpen",
    value: function doOpen() {
      this.l();
    }
  }, {
    key: "pause",
    value: function pause(t) {
      var _this4 = this;

      this.readyState = "pausing";

      var s = function s() {
        _this4.readyState = "paused", t();
      };

      if (this.u || !this.writable) {
        var _t5 = 0;
        this.u && (_t5++, this.once("pollComplete", function () {
          --_t5 || s();
        })), this.writable || (_t5++, this.once("drain", function () {
          --_t5 || s();
        }));
      } else s();
    }
  }, {
    key: "l",
    value: function l() {
      this.u = !0, this.doPoll(), this.emitReserved("poll");
    }
  }, {
    key: "onData",
    value: function onData(t) {
      var _this5 = this;

      (function (t, s) {
        var i = t.split(b),
            e = [];

        for (var _t6 = 0; _t6 < i.length; _t6++) {
          var _n2 = d(i[_t6], s);

          if (e.push(_n2), "error" === _n2.type) break;
        }

        return e;
      })(t, this.socket.binaryType).forEach(function (t) {
        if ("opening" === _this5.readyState && "open" === t.type && _this5.onOpen(), "close" === t.type) return _this5.onClose({
          description: "transport closed by the server"
        }), !1;

        _this5.onPacket(t);
      }), "closed" !== this.readyState && (this.u = !1, this.emitReserved("pollComplete"), "open" === this.readyState && this.l());
    }
  }, {
    key: "doClose",
    value: function doClose() {
      var _this6 = this;

      var t = function t() {
        _this6.write([{
          type: "close"
        }]);
      };

      "open" === this.readyState ? t() : this.once("open", t);
    }
  }, {
    key: "write",
    value: function write(t) {
      var _this7 = this;

      this.writable = !1, function (t, s) {
        var i = t.length,
            e = new Array(i);
        var n = 0;
        t.forEach(function (t, r) {
          o(t, !1, function (t) {
            e[r] = t, ++n === i && s(e.join(b));
          });
        });
      }(t, function (t) {
        _this7.doWrite(t, function () {
          _this7.writable = !0, _this7.emitReserved("drain");
        });
      });
    }
  }, {
    key: "uri",
    value: function uri() {
      var t = this.opts.secure ? "https" : "http",
          s = this.query || {};
      return !1 !== this.opts.timestampRequests && (s[this.opts.timestampParam] = B()), this.supportsBinary || s.sid || (s.b64 = 1), this.createUri(t, s);
    }
  }, {
    key: "name",
    get: function get() {
      return "polling";
    }
  }]);

  return N;
}(T);

var U = !1;

try {
  U = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest();
} catch (t) {}

var P = U;

function D() {}

var M =
/*#__PURE__*/
function (_N) {
  _inherits(M, _N);

  function M(t) {
    var _this8;

    _classCallCheck(this, M);

    if (_this8 = _possibleConstructorReturn(this, _getPrototypeOf(M).call(this, t)), "undefined" != typeof location) {
      var _s = "https:" === location.protocol;

      var _i3 = location.port;
      _i3 || (_i3 = _s ? "443" : "80"), _this8.xd = "undefined" != typeof location && t.hostname !== location.hostname || _i3 !== t.port;
    }

    return _possibleConstructorReturn(_this8);
  }

  _createClass(M, [{
    key: "doWrite",
    value: function doWrite(t, s) {
      var _this9 = this;

      var i = this.request({
        method: "POST",
        data: t
      });
      i.on("success", s), i.on("error", function (t, s) {
        _this9.onError("xhr post error", t, s);
      });
    }
  }, {
    key: "doPoll",
    value: function doPoll() {
      var _this10 = this;

      var t = this.request();
      t.on("data", this.onData.bind(this)), t.on("error", function (t, s) {
        _this10.onError("xhr poll error", t, s);
      }), this.pollXhr = t;
    }
  }]);

  return M;
}(N);

var S =
/*#__PURE__*/
function (_k2) {
  _inherits(S, _k2);

  function S(t, s, i) {
    var _this11;

    _classCallCheck(this, S);

    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(S).call(this)), _this11.createRequest = t, x(_assertThisInitialized(_this11), i), _this11.p = i, _this11.v = i.method || "GET", _this11.m = s, _this11.k = void 0 !== i.data ? i.data : null, _this11.A();
    return _this11;
  }

  _createClass(S, [{
    key: "A",
    value: function A() {
      var _this12 = this;

      var t;
      var s = O(this.p, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
      s.xdomain = !!this.p.xd;
      var i = this.O = this.createRequest(s);

      try {
        i.open(this.v, this.m, !0);

        try {
          if (this.p.extraHeaders) {
            i.setDisableHeaderCheck && i.setDisableHeaderCheck(!0);

            for (var _t7 in this.p.extraHeaders) {
              this.p.extraHeaders.hasOwnProperty(_t7) && i.setRequestHeader(_t7, this.p.extraHeaders[_t7]);
            }
          }
        } catch (t) {}

        if ("POST" === this.v) try {
          i.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
        } catch (t) {}

        try {
          i.setRequestHeader("Accept", "*/*");
        } catch (t) {}

        null === (t = this.p.cookieJar) || void 0 === t || t.addCookies(i), "withCredentials" in i && (i.withCredentials = this.p.withCredentials), this.p.requestTimeout && (i.timeout = this.p.requestTimeout), i.onreadystatechange = function () {
          var t;
          3 === i.readyState && (null === (t = _this12.p.cookieJar) || void 0 === t || t.parseCookies(i.getResponseHeader("set-cookie"))), 4 === i.readyState && (200 === i.status || 1223 === i.status ? _this12._() : _this12.setTimeoutFn(function () {
            _this12.j("number" == typeof i.status ? i.status : 0);
          }, 0));
        }, i.send(this.k);
      } catch (t) {
        return void this.setTimeoutFn(function () {
          _this12.j(t);
        }, 0);
      }

      "undefined" != typeof document && (this.B = S.requestsCount++, S.requests[this.B] = this);
    }
  }, {
    key: "j",
    value: function j(t) {
      this.emitReserved("error", t, this.O), this.C(!0);
    }
  }, {
    key: "C",
    value: function C(t) {
      if (void 0 !== this.O && null !== this.O) {
        if (this.O.onreadystatechange = D, t) try {
          this.O.abort();
        } catch (t) {}
        "undefined" != typeof document && delete S.requests[this.B], this.O = null;
      }
    }
  }, {
    key: "_",
    value: function _() {
      var t = this.O.responseText;
      null !== t && (this.emitReserved("data", t), this.emitReserved("success"), this.C());
    }
  }, {
    key: "abort",
    value: function abort() {
      this.C();
    }
  }]);

  return S;
}(k);

if (S.requestsCount = 0, S.requests = {}, "undefined" != typeof document) if ("function" == typeof attachEvent) attachEvent("onunload", L);else if ("function" == typeof addEventListener) {
  addEventListener("onpagehide" in E ? "pagehide" : "unload", L, !1);
}

function L() {
  for (var _t8 in S.requests) {
    S.requests.hasOwnProperty(_t8) && S.requests[_t8].abort();
  }
}

var R = function () {
  var t = F({
    xdomain: !1
  });
  return t && null !== t.responseType;
}();

var I =
/*#__PURE__*/
function (_M) {
  _inherits(I, _M);

  function I(t) {
    var _this13;

    _classCallCheck(this, I);

    _this13 = _possibleConstructorReturn(this, _getPrototypeOf(I).call(this, t));
    var s = t && t.forceBase64;
    _this13.supportsBinary = R && !s;
    return _this13;
  }

  _createClass(I, [{
    key: "request",
    value: function request() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return Object.assign(t, {
        xd: this.xd
      }, this.opts), new S(F, this.uri(), t);
    }
  }]);

  return I;
}(M);

exports.XHR = exports.NodeXHR = I;

function F(t) {
  var s = t.xdomain;

  try {
    if ("undefined" != typeof XMLHttpRequest && (!s || P)) return new XMLHttpRequest();
  } catch (t) {}

  if (!s) try {
    return new E[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
  } catch (t) {}
}

var $ = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase();

var V =
/*#__PURE__*/
function (_T2) {
  _inherits(V, _T2);

  function V() {
    _classCallCheck(this, V);

    return _possibleConstructorReturn(this, _getPrototypeOf(V).apply(this, arguments));
  }

  _createClass(V, [{
    key: "doOpen",
    value: function doOpen() {
      var t = this.uri(),
          s = this.opts.protocols,
          i = $ ? {} : O(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");
      this.opts.extraHeaders && (i.headers = this.opts.extraHeaders);

      try {
        this.ws = this.createSocket(t, s, i);
      } catch (t) {
        return this.emitReserved("error", t);
      }

      this.ws.binaryType = this.socket.binaryType, this.addEventListeners();
    }
  }, {
    key: "addEventListeners",
    value: function addEventListeners() {
      var _this14 = this;

      this.ws.onopen = function () {
        _this14.opts.autoUnref && _this14.ws.T.unref(), _this14.onOpen();
      }, this.ws.onclose = function (t) {
        return _this14.onClose({
          description: "websocket connection closed",
          context: t
        });
      }, this.ws.onmessage = function (t) {
        return _this14.onData(t.data);
      }, this.ws.onerror = function (t) {
        return _this14.onError("websocket error", t);
      };
    }
  }, {
    key: "write",
    value: function write(t) {
      var _this15 = this;

      this.writable = !1;

      var _loop = function _loop(_s2) {
        var i = t[_s2],
            e = _s2 === t.length - 1;
        o(i, _this15.supportsBinary, function (t) {
          try {
            _this15.doWrite(i, t);
          } catch (t) {}

          e && A(function () {
            _this15.writable = !0, _this15.emitReserved("drain");
          }, _this15.setTimeoutFn);
        });
      };

      for (var _s2 = 0; _s2 < t.length; _s2++) {
        _loop(_s2);
      }
    }
  }, {
    key: "doClose",
    value: function doClose() {
      void 0 !== this.ws && (this.ws.onerror = function () {}, this.ws.close(), this.ws = null);
    }
  }, {
    key: "uri",
    value: function uri() {
      var t = this.opts.secure ? "wss" : "ws",
          s = this.query || {};
      return this.opts.timestampRequests && (s[this.opts.timestampParam] = B()), this.supportsBinary || (s.b64 = 1), this.createUri(t, s);
    }
  }, {
    key: "name",
    get: function get() {
      return "websocket";
    }
  }]);

  return V;
}(T);

var H = E.WebSocket || E.MozWebSocket;

var W =
/*#__PURE__*/
function (_V) {
  _inherits(W, _V);

  function W() {
    _classCallCheck(this, W);

    return _possibleConstructorReturn(this, _getPrototypeOf(W).apply(this, arguments));
  }

  _createClass(W, [{
    key: "createSocket",
    value: function createSocket(t, s, i) {
      return $ ? new H(t, s, i) : s ? new H(t, s) : new H(t);
    }
  }, {
    key: "doWrite",
    value: function doWrite(t, s) {
      this.ws.send(s);
    }
  }]);

  return W;
}(V);

exports.WebSocket = exports.NodeWebSocket = W;

var q =
/*#__PURE__*/
function (_T3) {
  _inherits(q, _T3);

  function q() {
    _classCallCheck(this, q);

    return _possibleConstructorReturn(this, _getPrototypeOf(q).apply(this, arguments));
  }

  _createClass(q, [{
    key: "doOpen",
    value: function doOpen() {
      var _this16 = this;

      try {
        this.N = new WebTransport(this.createUri("https"), this.opts.transportOptions[this.name]);
      } catch (t) {
        return this.emitReserved("error", t);
      }

      this.N.closed.then(function () {
        _this16.onClose();
      })["catch"](function (t) {
        _this16.onError("webtransport error", t);
      }), this.N.ready.then(function () {
        _this16.N.createBidirectionalStream().then(function (t) {
          var s = function (t, s) {
            w || (w = new TextDecoder());
            var e = [];
            var n = 0,
                r = -1,
                o = !1;
            return new TransformStream({
              transform: function transform(h, c) {
                for (e.push(h);;) {
                  if (0 === n) {
                    if (v(e) < 1) break;

                    var _t9 = m(e, 1);

                    o = !(128 & ~_t9[0]), r = 127 & _t9[0], n = r < 126 ? 3 : 126 === r ? 1 : 2;
                  } else if (1 === n) {
                    if (v(e) < 2) break;

                    var _t10 = m(e, 2);

                    r = new DataView(_t10.buffer, _t10.byteOffset, _t10.length).getUint16(0), n = 3;
                  } else if (2 === n) {
                    if (v(e) < 8) break;

                    var _t11 = m(e, 8),
                        _s3 = new DataView(_t11.buffer, _t11.byteOffset, _t11.length),
                        _o2 = _s3.getUint32(0);

                    if (_o2 > Math.pow(2, 21) - 1) {
                      c.enqueue(i);
                      break;
                    }

                    r = _o2 * Math.pow(2, 32) + _s3.getUint32(4), n = 3;
                  } else {
                    if (v(e) < r) break;

                    var _t12 = m(e, r);

                    c.enqueue(d(o ? _t12 : w.decode(_t12), s)), n = 0;
                  }

                  if (0 === r || r > t) {
                    c.enqueue(i);
                    break;
                  }
                }
              }
            });
          }(Number.MAX_SAFE_INTEGER, _this16.socket.binaryType),
              e = t.readable.pipeThrough(s).getReader(),
              n = g();

          n.readable.pipeTo(t.writable), _this16.U = n.writable.getWriter();

          var r = function r() {
            e.read().then(function (_ref2) {
              var t = _ref2.done,
                  s = _ref2.value;
              t || (_this16.onPacket(s), r());
            })["catch"](function (t) {});
          };

          r();
          var o = {
            type: "open"
          };
          _this16.query.sid && (o.data = "{\"sid\":\"".concat(_this16.query.sid, "\"}")), _this16.U.write(o).then(function () {
            return _this16.onOpen();
          });
        });
      });
    }
  }, {
    key: "write",
    value: function write(t) {
      var _this17 = this;

      this.writable = !1;

      var _loop2 = function _loop2(_s4) {
        var i = t[_s4],
            e = _s4 === t.length - 1;

        _this17.U.write(i).then(function () {
          e && A(function () {
            _this17.writable = !0, _this17.emitReserved("drain");
          }, _this17.setTimeoutFn);
        });
      };

      for (var _s4 = 0; _s4 < t.length; _s4++) {
        _loop2(_s4);
      }
    }
  }, {
    key: "doClose",
    value: function doClose() {
      var t;
      null === (t = this.N) || void 0 === t || t.close();
    }
  }, {
    key: "name",
    get: function get() {
      return "webtransport";
    }
  }]);

  return q;
}(T);

exports.WebTransport = q;
var X = {
  websocket: W,
  webtransport: q,
  polling: I
},
    z = /^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
    J = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];

function Q(t) {
  if (t.length > 8e3) throw "URI too long";
  var s = t,
      i = t.indexOf("["),
      e = t.indexOf("]");
  -1 != i && -1 != e && (t = t.substring(0, i) + t.substring(i, e).replace(/:/g, ";") + t.substring(e, t.length));
  var n = z.exec(t || ""),
      r = {},
      o = 14;

  for (; o--;) {
    r[J[o]] = n[o] || "";
  }

  return -1 != i && -1 != e && (r.source = s, r.host = r.host.substring(1, r.host.length - 1).replace(/;/g, ":"), r.authority = r.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), r.ipv6uri = !0), r.pathNames = function (t, s) {
    var i = /\/{2,9}/g,
        e = s.replace(i, "/").split("/");
    "/" != s.slice(0, 1) && 0 !== s.length || e.splice(0, 1);
    "/" == s.slice(-1) && e.splice(e.length - 1, 1);
    return e;
  }(0, r.path), r.queryKey = function (t, s) {
    var i = {};
    return s.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function (t, s, e) {
      s && (i[s] = e);
    }), i;
  }(0, r.query), r;
}

var G = "function" == typeof addEventListener && "function" == typeof removeEventListener,
    K = [];
G && addEventListener("offline", function () {
  K.forEach(function (t) {
    return t();
  });
}, !1);

var Y =
/*#__PURE__*/
function (_k3) {
  _inherits(Y, _k3);

  function Y(t, s) {
    var _this18;

    _classCallCheck(this, Y);

    if (_this18 = _possibleConstructorReturn(this, _getPrototypeOf(Y).call(this)), _this18.binaryType = "arraybuffer", _this18.writeBuffer = [], _this18.P = 0, _this18.D = -1, _this18.M = -1, _this18.S = -1, _this18.L = 1 / 0, t && "object" == _typeof(t) && (s = t, t = null), t) {
      var _i4 = Q(t);

      s.hostname = _i4.host, s.secure = "https" === _i4.protocol || "wss" === _i4.protocol, s.port = _i4.port, _i4.query && (s.query = _i4.query);
    } else s.host && (s.hostname = Q(s.host).host);

    x(_assertThisInitialized(_this18), s), _this18.secure = null != s.secure ? s.secure : "undefined" != typeof location && "https:" === location.protocol, s.hostname && !s.port && (s.port = _this18.secure ? "443" : "80"), _this18.hostname = s.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), _this18.port = s.port || ("undefined" != typeof location && location.port ? location.port : _this18.secure ? "443" : "80"), _this18.transports = [], _this18.R = {}, s.transports.forEach(function (t) {
      var s = t.prototype.name;
      _this18.transports.push(s), _this18.R[s] = t;
    }), _this18.opts = Object.assign({
      path: "/engine.io",
      agent: !1,
      withCredentials: !1,
      upgrade: !0,
      timestampParam: "t",
      rememberUpgrade: !1,
      addTrailingSlash: !0,
      rejectUnauthorized: !0,
      perMessageDeflate: {
        threshold: 1024
      },
      transportOptions: {},
      closeOnBeforeunload: !1
    }, s), _this18.opts.path = _this18.opts.path.replace(/\/$/, "") + (_this18.opts.addTrailingSlash ? "/" : ""), "string" == typeof _this18.opts.query && (_this18.opts.query = function (t) {
      var s = {},
          i = t.split("&");

      for (var _t13 = 0, _e = i.length; _t13 < _e; _t13++) {
        var _e2 = i[_t13].split("=");

        s[decodeURIComponent(_e2[0])] = decodeURIComponent(_e2[1]);
      }

      return s;
    }(_this18.opts.query)), G && (_this18.opts.closeOnBeforeunload && (_this18.I = function () {
      _this18.transport && (_this18.transport.removeAllListeners(), _this18.transport.close());
    }, addEventListener("beforeunload", _this18.I, !1)), "localhost" !== _this18.hostname && (_this18.F = function () {
      _this18.$("transport close", {
        description: "network connection lost"
      });
    }, K.push(_this18.F))), _this18.opts.withCredentials && (_this18.V = void 0), _this18.H();
    return _possibleConstructorReturn(_this18);
  }

  _createClass(Y, [{
    key: "createTransport",
    value: function createTransport(t) {
      var s = Object.assign({}, this.opts.query);
      s.EIO = 4, s.transport = t, this.id && (s.sid = this.id);
      var i = Object.assign({}, this.opts, {
        query: s,
        socket: this,
        hostname: this.hostname,
        secure: this.secure,
        port: this.port
      }, this.opts.transportOptions[t]);
      return new this.R[t](i);
    }
  }, {
    key: "H",
    value: function H() {
      var _this19 = this;

      if (0 === this.transports.length) return void this.setTimeoutFn(function () {
        _this19.emitReserved("error", "No transports available");
      }, 0);
      var t = this.opts.rememberUpgrade && Y.priorWebsocketSuccess && -1 !== this.transports.indexOf("websocket") ? "websocket" : this.transports[0];
      this.readyState = "opening";
      var s = this.createTransport(t);
      s.open(), this.setTransport(s);
    }
  }, {
    key: "setTransport",
    value: function setTransport(t) {
      var _this20 = this;

      this.transport && this.transport.removeAllListeners(), this.transport = t, t.on("drain", this.W.bind(this)).on("packet", this.q.bind(this)).on("error", this.j.bind(this)).on("close", function (t) {
        return _this20.$("transport close", t);
      });
    }
  }, {
    key: "onOpen",
    value: function onOpen() {
      this.readyState = "open", Y.priorWebsocketSuccess = "websocket" === this.transport.name, this.emitReserved("open"), this.flush();
    }
  }, {
    key: "q",
    value: function q(t) {
      if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch (this.emitReserved("packet", t), this.emitReserved("heartbeat"), t.type) {
        case "open":
          this.onHandshake(JSON.parse(t.data));
          break;

        case "ping":
          this.X("pong"), this.emitReserved("ping"), this.emitReserved("pong"), this.J();
          break;

        case "error":
          var _s5 = new Error("server error");

          _s5.code = t.data, this.j(_s5);
          break;

        case "message":
          this.emitReserved("data", t.data), this.emitReserved("message", t.data);
      }
    }
  }, {
    key: "onHandshake",
    value: function onHandshake(t) {
      this.emitReserved("handshake", t), this.id = t.sid, this.transport.query.sid = t.sid, this.D = t.pingInterval, this.M = t.pingTimeout, this.S = t.maxPayload, this.onOpen(), "closed" !== this.readyState && this.J();
    }
  }, {
    key: "J",
    value: function J() {
      var _this21 = this;

      this.clearTimeoutFn(this.G);
      var t = this.D + this.M;
      this.L = Date.now() + t, this.G = this.setTimeoutFn(function () {
        _this21.$("ping timeout");
      }, t), this.opts.autoUnref && this.G.unref();
    }
  }, {
    key: "W",
    value: function W() {
      this.writeBuffer.splice(0, this.P), this.P = 0, 0 === this.writeBuffer.length ? this.emitReserved("drain") : this.flush();
    }
  }, {
    key: "flush",
    value: function flush() {
      if ("closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
        var _t14 = this.K();

        this.transport.send(_t14), this.P = _t14.length, this.emitReserved("flush");
      }
    }
  }, {
    key: "K",
    value: function K() {
      if (!(this.S && "polling" === this.transport.name && this.writeBuffer.length > 1)) return this.writeBuffer;
      var t = 1;

      for (var _i5 = 0; _i5 < this.writeBuffer.length; _i5++) {
        var _e3 = this.writeBuffer[_i5].data;
        if (_e3 && (t += "string" == typeof (s = _e3) ? function (t) {
          var s = 0,
              i = 0;

          for (var _e4 = 0, _n3 = t.length; _e4 < _n3; _e4++) {
            s = t.charCodeAt(_e4), s < 128 ? i += 1 : s < 2048 ? i += 2 : s < 55296 || s >= 57344 ? i += 3 : (_e4++, i += 4);
          }

          return i;
        }(s) : Math.ceil(1.33 * (s.byteLength || s.size))), _i5 > 0 && t > this.S) return this.writeBuffer.slice(0, _i5);
        t += 2;
      }

      var s;
      return this.writeBuffer;
    }
  }, {
    key: "Y",
    value: function Y() {
      var _this22 = this;

      if (!this.L) return !0;
      var t = Date.now() > this.L;
      return t && (this.L = 0, A(function () {
        _this22.$("ping timeout");
      }, this.setTimeoutFn)), t;
    }
  }, {
    key: "write",
    value: function write(t, s, i) {
      return this.X("message", t, s, i), this;
    }
  }, {
    key: "send",
    value: function send(t, s, i) {
      return this.X("message", t, s, i), this;
    }
  }, {
    key: "X",
    value: function X(t, s, i, e) {
      if ("function" == typeof s && (e = s, s = void 0), "function" == typeof i && (e = i, i = null), "closing" === this.readyState || "closed" === this.readyState) return;
      (i = i || {}).compress = !1 !== i.compress;
      var n = {
        type: t,
        data: s,
        options: i
      };
      this.emitReserved("packetCreate", n), this.writeBuffer.push(n), e && this.once("flush", e), this.flush();
    }
  }, {
    key: "close",
    value: function close() {
      var _this23 = this;

      var t = function t() {
        _this23.$("forced close"), _this23.transport.close();
      },
          s = function s() {
        _this23.off("upgrade", s), _this23.off("upgradeError", s), t();
      },
          i = function i() {
        _this23.once("upgrade", s), _this23.once("upgradeError", s);
      };

      return "opening" !== this.readyState && "open" !== this.readyState || (this.readyState = "closing", this.writeBuffer.length ? this.once("drain", function () {
        _this23.upgrading ? i() : t();
      }) : this.upgrading ? i() : t()), this;
    }
  }, {
    key: "j",
    value: function j(t) {
      if (Y.priorWebsocketSuccess = !1, this.opts.tryAllTransports && this.transports.length > 1 && "opening" === this.readyState) return this.transports.shift(), this.H();
      this.emitReserved("error", t), this.$("transport error", t);
    }
  }, {
    key: "$",
    value: function $(t, s) {
      if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
        if (this.clearTimeoutFn(this.G), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), G && (this.I && removeEventListener("beforeunload", this.I, !1), this.F)) {
          var _t15 = K.indexOf(this.F);

          -1 !== _t15 && K.splice(_t15, 1);
        }

        this.readyState = "closed", this.id = null, this.emitReserved("close", t, s), this.writeBuffer = [], this.P = 0;
      }
    }
  }]);

  return Y;
}(k);

Y.protocol = 4;

var Z =
/*#__PURE__*/
function (_Y) {
  _inherits(Z, _Y);

  function Z() {
    var _this24;

    _classCallCheck(this, Z);

    _this24 = _possibleConstructorReturn(this, _getPrototypeOf(Z).apply(this, arguments)), _this24.Z = [];
    return _this24;
  }

  _createClass(Z, [{
    key: "onOpen",
    value: function onOpen() {
      if (_get(_getPrototypeOf(Z.prototype), "onOpen", this).call(this), "open" === this.readyState && this.opts.upgrade) for (var _t16 = 0; _t16 < this.Z.length; _t16++) {
        this.tt(this.Z[_t16]);
      }
    }
  }, {
    key: "tt",
    value: function tt(t) {
      var _this25 = this;

      var s = this.createTransport(t),
          i = !1;
      Y.priorWebsocketSuccess = !1;

      var e = function e() {
        i || (s.send([{
          type: "ping",
          data: "probe"
        }]), s.once("packet", function (t) {
          if (!i) if ("pong" === t.type && "probe" === t.data) {
            if (_this25.upgrading = !0, _this25.emitReserved("upgrading", s), !s) return;
            Y.priorWebsocketSuccess = "websocket" === s.name, _this25.transport.pause(function () {
              i || "closed" !== _this25.readyState && (a(), _this25.setTransport(s), s.send([{
                type: "upgrade"
              }]), _this25.emitReserved("upgrade", s), s = null, _this25.upgrading = !1, _this25.flush());
            });
          } else {
            var _t17 = new Error("probe error");

            _t17.transport = s.name, _this25.emitReserved("upgradeError", _t17);
          }
        }));
      };

      function n() {
        i || (i = !0, a(), s.close(), s = null);
      }

      var r = function r(t) {
        var i = new Error("probe error: " + t);
        i.transport = s.name, n(), _this25.emitReserved("upgradeError", i);
      };

      function o() {
        r("transport closed");
      }

      function h() {
        r("socket closed");
      }

      function c(t) {
        s && t.name !== s.name && n();
      }

      var a = function a() {
        s.removeListener("open", e), s.removeListener("error", r), s.removeListener("close", o), _this25.off("close", h), _this25.off("upgrading", c);
      };

      s.once("open", e), s.once("error", r), s.once("close", o), this.once("close", h), this.once("upgrading", c), -1 !== this.Z.indexOf("webtransport") && "webtransport" !== t ? this.setTimeoutFn(function () {
        i || s.open();
      }, 200) : s.open();
    }
  }, {
    key: "onHandshake",
    value: function onHandshake(t) {
      this.Z = this.st(t.upgrades), _get(_getPrototypeOf(Z.prototype), "onHandshake", this).call(this, t);
    }
  }, {
    key: "st",
    value: function st(t) {
      var s = [];

      for (var _i6 = 0; _i6 < t.length; _i6++) {
        ~this.transports.indexOf(t[_i6]) && s.push(t[_i6]);
      }

      return s;
    }
  }]);

  return Z;
}(Y);

var tt =
/*#__PURE__*/
function (_Z) {
  _inherits(tt, _Z);

  function tt(t) {
    var _this26;

    var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, tt);

    var i = "object" == _typeof(t) ? t : s;
    (!i.transports || i.transports && "string" == typeof i.transports[0]) && (i.transports = (i.transports || ["polling", "websocket", "webtransport"]).map(function (t) {
      return X[t];
    }).filter(function (t) {
      return !!t;
    })), _this26 = _possibleConstructorReturn(this, _getPrototypeOf(tt).call(this, t, i));
    return _this26;
  }

  return tt;
}(Z);

var st =
/*#__PURE__*/
function (_N2) {
  _inherits(st, _N2);

  function st() {
    _classCallCheck(this, st);

    return _possibleConstructorReturn(this, _getPrototypeOf(st).apply(this, arguments));
  }

  _createClass(st, [{
    key: "doPoll",
    value: function doPoll() {
      var _this27 = this;

      this.it().then(function (t) {
        if (!t.ok) return _this27.onError("fetch read error", t.status, t);
        t.text().then(function (t) {
          return _this27.onData(t);
        });
      })["catch"](function (t) {
        _this27.onError("fetch read error", t);
      });
    }
  }, {
    key: "doWrite",
    value: function doWrite(t, s) {
      var _this28 = this;

      this.it(t).then(function (t) {
        if (!t.ok) return _this28.onError("fetch write error", t.status, t);
        s();
      })["catch"](function (t) {
        _this28.onError("fetch write error", t);
      });
    }
  }, {
    key: "it",
    value: function it(t) {
      var _this29 = this;

      var s;
      var i = void 0 !== t,
          e = new Headers(this.opts.extraHeaders);
      return i && e.set("content-type", "text/plain;charset=UTF-8"), null === (s = this.socket.V) || void 0 === s || s.appendCookies(e), fetch(this.uri(), {
        method: i ? "POST" : "GET",
        body: i ? t : null,
        headers: e,
        credentials: this.opts.withCredentials ? "include" : "omit"
      }).then(function (t) {
        var s;
        return null === (s = _this29.socket.V) || void 0 === s || s.parseCookies(t.headers.getSetCookie()), t;
      });
    }
  }]);

  return st;
}(N);

exports.Fetch = st;

var it = "function" == typeof ArrayBuffer,
    et = function et(t) {
  return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : t.buffer instanceof ArrayBuffer;
},
    nt = Object.prototype.toString,
    rt = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === nt.call(Blob),
    ot = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === nt.call(File);

function ht(t) {
  return it && (t instanceof ArrayBuffer || et(t)) || rt && t instanceof Blob || ot && t instanceof File;
}

function ct(t, s) {
  if (!t || "object" != _typeof(t)) return !1;

  if (Array.isArray(t)) {
    for (var _s6 = 0, _i7 = t.length; _s6 < _i7; _s6++) {
      if (ct(t[_s6])) return !0;
    }

    return !1;
  }

  if (ht(t)) return !0;
  if (t.toJSON && "function" == typeof t.toJSON && 1 === arguments.length) return ct(t.toJSON(), !0);

  for (var _s7 in t) {
    if (Object.prototype.hasOwnProperty.call(t, _s7) && ct(t[_s7])) return !0;
  }

  return !1;
}

function at(t) {
  var s = [],
      i = t.data,
      e = t;
  return e.data = ut(i, s), e.attachments = s.length, {
    packet: e,
    buffers: s
  };
}

function ut(t, s) {
  if (!t) return t;

  if (ht(t)) {
    var _i8 = {
      et: !0,
      num: s.length
    };
    return s.push(t), _i8;
  }

  if (Array.isArray(t)) {
    var _i9 = new Array(t.length);

    for (var _e5 = 0; _e5 < t.length; _e5++) {
      _i9[_e5] = ut(t[_e5], s);
    }

    return _i9;
  }

  if ("object" == _typeof(t) && !(t instanceof Date)) {
    var _i10 = {};

    for (var _e6 in t) {
      Object.prototype.hasOwnProperty.call(t, _e6) && (_i10[_e6] = ut(t[_e6], s));
    }

    return _i10;
  }

  return t;
}

function ft(t, s) {
  return t.data = lt(t.data, s), delete t.attachments, t;
}

function lt(t, s) {
  if (!t) return t;

  if (t && !0 === t.et) {
    if ("number" == typeof t.num && t.num >= 0 && t.num < s.length) return s[t.num];
    throw new Error("illegal attachments");
  }

  if (Array.isArray(t)) for (var _i11 = 0; _i11 < t.length; _i11++) {
    t[_i11] = lt(t[_i11], s);
  } else if ("object" == _typeof(t)) for (var _i12 in t) {
    Object.prototype.hasOwnProperty.call(t, _i12) && (t[_i12] = lt(t[_i12], s));
  }
  return t;
}

var dt = ["connect", "connect_error", "disconnect", "disconnecting", "newListener", "removeListener"],
    pt = 5;
exports.protocol = pt;

var _yt;

!function (t) {
  t[t.CONNECT = 0] = "CONNECT", t[t.DISCONNECT = 1] = "DISCONNECT", t[t.EVENT = 2] = "EVENT", t[t.ACK = 3] = "ACK", t[t.CONNECT_ERROR = 4] = "CONNECT_ERROR", t[t.BINARY_EVENT = 5] = "BINARY_EVENT", t[t.BINARY_ACK = 6] = "BINARY_ACK";
}(_yt || (_yt = {}));

var bt =
/*#__PURE__*/
function (_k4) {
  _inherits(bt, _k4);

  function bt(t) {
    var _this30;

    _classCallCheck(this, bt);

    _this30 = _possibleConstructorReturn(this, _getPrototypeOf(bt).call(this)), _this30.reviver = t;
    return _this30;
  }

  _createClass(bt, [{
    key: "add",
    value: function add(t) {
      var s;

      if ("string" == typeof t) {
        if (this.reconstructor) throw new Error("got plaintext data when reconstructing a packet");
        s = this.decodeString(t);

        var _i13 = s.type === _yt.BINARY_EVENT;

        _i13 || s.type === _yt.BINARY_ACK ? (s.type = _i13 ? _yt.EVENT : _yt.ACK, this.reconstructor = new gt(s), 0 === s.attachments && _get(_getPrototypeOf(bt.prototype), "emitReserved", this).call(this, "decoded", s)) : _get(_getPrototypeOf(bt.prototype), "emitReserved", this).call(this, "decoded", s);
      } else {
        if (!ht(t) && !t.base64) throw new Error("Unknown type: " + t);
        if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");
        s = this.reconstructor.takeBinaryData(t), s && (this.reconstructor = null, _get(_getPrototypeOf(bt.prototype), "emitReserved", this).call(this, "decoded", s));
      }
    }
  }, {
    key: "decodeString",
    value: function decodeString(t) {
      var s = 0;
      var i = {
        type: Number(t.charAt(0))
      };
      if (void 0 === _yt[i.type]) throw new Error("unknown packet type " + i.type);

      if (i.type === _yt.BINARY_EVENT || i.type === _yt.BINARY_ACK) {
        var _e7 = s + 1;

        for (; "-" !== t.charAt(++s) && s != t.length;) {
          ;
        }

        var _n4 = t.substring(_e7, s);

        if (_n4 != Number(_n4) || "-" !== t.charAt(s)) throw new Error("Illegal attachments");
        i.attachments = Number(_n4);
      }

      if ("/" === t.charAt(s + 1)) {
        var _e8 = s + 1;

        for (; ++s;) {
          if ("," === t.charAt(s)) break;
          if (s === t.length) break;
        }

        i.nsp = t.substring(_e8, s);
      } else i.nsp = "/";

      var e = t.charAt(s + 1);

      if ("" !== e && Number(e) == e) {
        var _e9 = s + 1;

        for (; ++s;) {
          var _i14 = t.charAt(s);

          if (null == _i14 || Number(_i14) != _i14) {
            --s;
            break;
          }

          if (s === t.length) break;
        }

        i.id = Number(t.substring(_e9, s + 1));
      }

      if (t.charAt(++s)) {
        var _e10 = this.tryParse(t.substr(s));

        if (!bt.isPayloadValid(i.type, _e10)) throw new Error("invalid payload");
        i.data = _e10;
      }

      return i;
    }
  }, {
    key: "tryParse",
    value: function tryParse(t) {
      try {
        return JSON.parse(t, this.reviver);
      } catch (t) {
        return !1;
      }
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.reconstructor && (this.reconstructor.finishedReconstruction(), this.reconstructor = null);
    }
  }], [{
    key: "isPayloadValid",
    value: function isPayloadValid(t, s) {
      switch (t) {
        case _yt.CONNECT:
          return vt(s);

        case _yt.DISCONNECT:
          return void 0 === s;

        case _yt.CONNECT_ERROR:
          return "string" == typeof s || vt(s);

        case _yt.EVENT:
        case _yt.BINARY_EVENT:
          return Array.isArray(s) && ("number" == typeof s[0] || "string" == typeof s[0] && -1 === dt.indexOf(s[0]));

        case _yt.ACK:
        case _yt.BINARY_ACK:
          return Array.isArray(s);
      }
    }
  }]);

  return bt;
}(k);

var gt =
/*#__PURE__*/
function () {
  function gt(t) {
    _classCallCheck(this, gt);

    this.packet = t, this.buffers = [], this.reconPack = t;
  }

  _createClass(gt, [{
    key: "takeBinaryData",
    value: function takeBinaryData(t) {
      if (this.buffers.push(t), this.buffers.length === this.reconPack.attachments) {
        var _t18 = ft(this.reconPack, this.buffers);

        return this.finishedReconstruction(), _t18;
      }

      return null;
    }
  }, {
    key: "finishedReconstruction",
    value: function finishedReconstruction() {
      this.reconPack = null, this.buffers = [];
    }
  }]);

  return gt;
}();

var wt = Number.isInteger || function (t) {
  return "number" == typeof t && isFinite(t) && Math.floor(t) === t;
};

function vt(t) {
  return "[object Object]" === Object.prototype.toString.call(t);
}

var mt = Object.freeze({
  __proto__: null,
  protocol: 5,

  get PacketType() {
    return _yt;
  },

  Encoder:
  /*#__PURE__*/
  function () {
    function Encoder(t) {
      _classCallCheck(this, Encoder);

      this.replacer = t;
    }

    _createClass(Encoder, [{
      key: "encode",
      value: function encode(t) {
        return t.type !== _yt.EVENT && t.type !== _yt.ACK || !ct(t) ? [this.encodeAsString(t)] : this.encodeAsBinary({
          type: t.type === _yt.EVENT ? _yt.BINARY_EVENT : _yt.BINARY_ACK,
          nsp: t.nsp,
          data: t.data,
          id: t.id
        });
      }
    }, {
      key: "encodeAsString",
      value: function encodeAsString(t) {
        var s = "" + t.type;
        return t.type !== _yt.BINARY_EVENT && t.type !== _yt.BINARY_ACK || (s += t.attachments + "-"), t.nsp && "/" !== t.nsp && (s += t.nsp + ","), null != t.id && (s += t.id), null != t.data && (s += JSON.stringify(t.data, this.replacer)), s;
      }
    }, {
      key: "encodeAsBinary",
      value: function encodeAsBinary(t) {
        var s = at(t),
            i = this.encodeAsString(s.packet),
            e = s.buffers;
        return e.unshift(i), e;
      }
    }]);

    return Encoder;
  }(),
  Decoder: bt,
  isPacketValid: function isPacketValid(t) {
    return "string" == typeof t.nsp && (void 0 === (s = t.id) || wt(s)) && function (t, s) {
      switch (t) {
        case _yt.CONNECT:
          return void 0 === s || vt(s);

        case _yt.DISCONNECT:
          return void 0 === s;

        case _yt.EVENT:
          return Array.isArray(s) && ("number" == typeof s[0] || "string" == typeof s[0] && -1 === dt.indexOf(s[0]));

        case _yt.ACK:
          return Array.isArray(s);

        case _yt.CONNECT_ERROR:
          return "string" == typeof s || vt(s);

        default:
          return !1;
      }
    }(t.type, t.data);
    var s;
  }
});

function kt(t, s, i) {
  return t.on(s, i), function () {
    t.off(s, i);
  };
}

var At = Object.freeze({
  connect: 1,
  connect_error: 1,
  disconnect: 1,
  disconnecting: 1,
  newListener: 1,
  removeListener: 1
});

var Et =
/*#__PURE__*/
function (_k5) {
  _inherits(Et, _k5);

  function Et(t, s, i) {
    var _this31;

    _classCallCheck(this, Et);

    _this31 = _possibleConstructorReturn(this, _getPrototypeOf(Et).call(this)), _this31.connected = !1, _this31.recovered = !1, _this31.receiveBuffer = [], _this31.sendBuffer = [], _this31.nt = [], _this31.rt = 0, _this31.ids = 0, _this31.acks = {}, _this31.flags = {}, _this31.io = t, _this31.nsp = s, i && i.auth && (_this31.auth = i.auth), _this31.p = Object.assign({}, i), _this31.io.ot && _this31.open();
    return _this31;
  }

  _createClass(Et, [{
    key: "subEvents",
    value: function subEvents() {
      if (this.subs) return;
      var t = this.io;
      this.subs = [kt(t, "open", this.onopen.bind(this)), kt(t, "packet", this.onpacket.bind(this)), kt(t, "error", this.onerror.bind(this)), kt(t, "close", this.onclose.bind(this))];
    }
  }, {
    key: "connect",
    value: function connect() {
      return this.connected || (this.subEvents(), this.io.ht || this.io.open(), "open" === this.io.ct && this.onopen()), this;
    }
  }, {
    key: "open",
    value: function open() {
      return this.connect();
    }
  }, {
    key: "send",
    value: function send() {
      for (var _len2 = arguments.length, t = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        t[_key2] = arguments[_key2];
      }

      return t.unshift("message"), this.emit.apply(this, t), this;
    }
  }, {
    key: "emit",
    value: function emit(t) {
      var i, e, n;
      if (At.hasOwnProperty(t)) throw new Error('"' + t.toString() + '" is a reserved event name');

      for (var _len3 = arguments.length, s = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        s[_key3 - 1] = arguments[_key3];
      }

      if (s.unshift(t), this.p.retries && !this.flags.fromQueue && !this.flags["volatile"]) return this.ut(s), this;
      var r = {
        type: _yt.EVENT,
        data: s,
        options: {}
      };

      if (r.options.compress = !1 !== this.flags.compress, "function" == typeof s[s.length - 1]) {
        var _t19 = this.ids++,
            _i15 = s.pop();

        this.ft(_t19, _i15), r.id = _t19;
      }

      var o = null === (e = null === (i = this.io.engine) || void 0 === i ? void 0 : i.transport) || void 0 === e ? void 0 : e.writable,
          h = this.connected && !(null === (n = this.io.engine) || void 0 === n ? void 0 : n.Y());
      return this.flags["volatile"] && !o || (h ? (this.notifyOutgoingListeners(r), this.packet(r)) : this.sendBuffer.push(r)), this.flags = {}, this;
    }
  }, {
    key: "ft",
    value: function ft(t, s) {
      var _this32 = this;

      var i;
      var e = null !== (i = this.flags.timeout) && void 0 !== i ? i : this.p.ackTimeout;
      if (void 0 === e) return void (this.acks[t] = s);

      var n = this.io.setTimeoutFn(function () {
        delete _this32.acks[t];

        for (var _s8 = 0; _s8 < _this32.sendBuffer.length; _s8++) {
          _this32.sendBuffer[_s8].id === t && _this32.sendBuffer.splice(_s8, 1);
        }

        s.call(_this32, new Error("operation has timed out"));
      }, e),
          r = function r() {
        for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          t[_key4] = arguments[_key4];
        }

        _this32.io.clearTimeoutFn(n), s.apply(_this32, t);
      };

      r.withError = !0, this.acks[t] = r;
    }
  }, {
    key: "emitWithAck",
    value: function emitWithAck(t) {
      var _this33 = this;

      for (var _len5 = arguments.length, s = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
        s[_key5 - 1] = arguments[_key5];
      }

      return new Promise(function (i, e) {
        var n = function n(t, s) {
          return t ? e(t) : i(s);
        };

        n.withError = !0, s.push(n), _this33.emit.apply(_this33, [t].concat(s));
      });
    }
  }, {
    key: "ut",
    value: function ut(t) {
      var _this34 = this;

      var s;
      "function" == typeof t[t.length - 1] && (s = t.pop());
      var i = {
        id: this.rt++,
        tryCount: 0,
        pending: !1,
        args: t,
        flags: Object.assign({
          fromQueue: !0
        }, this.flags)
      };
      t.push(function (t) {
        if (i !== _this34.nt[0]) return;

        for (var _len6 = arguments.length, e = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
          e[_key6 - 1] = arguments[_key6];
        }

        return null !== t ? i.tryCount > _this34.p.retries && (_this34.nt.shift(), s && s(t)) : (_this34.nt.shift(), s && s.apply(void 0, [null].concat(e))), i.pending = !1, _this34.lt();
      }), this.nt.push(i), this.lt();
    }
  }, {
    key: "lt",
    value: function lt() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
      if (!this.connected || 0 === this.nt.length) return;
      var s = this.nt[0];
      s.pending && !t || (s.pending = !0, s.tryCount++, this.flags = s.flags, this.emit.apply(this, s.args));
    }
  }, {
    key: "packet",
    value: function packet(t) {
      t.nsp = this.nsp, this.io.dt(t);
    }
  }, {
    key: "onopen",
    value: function onopen() {
      var _this35 = this;

      "function" == typeof this.auth ? this.auth(function (t) {
        _this35.yt(t);
      }) : this.yt(this.auth);
    }
  }, {
    key: "yt",
    value: function yt(t) {
      this.packet({
        type: _yt.CONNECT,
        data: this.bt ? Object.assign({
          pid: this.bt,
          offset: this.gt
        }, t) : t
      });
    }
  }, {
    key: "onerror",
    value: function onerror(t) {
      this.connected || this.emitReserved("connect_error", t);
    }
  }, {
    key: "onclose",
    value: function onclose(t, s) {
      this.connected = !1, delete this.id, this.emitReserved("disconnect", t, s), this.wt();
    }
  }, {
    key: "wt",
    value: function wt() {
      var _this36 = this;

      Object.keys(this.acks).forEach(function (t) {
        if (!_this36.sendBuffer.some(function (s) {
          return String(s.id) === t;
        })) {
          var _s9 = _this36.acks[t];
          delete _this36.acks[t], _s9.withError && _s9.call(_this36, new Error("socket has been disconnected"));
        }
      });
    }
  }, {
    key: "onpacket",
    value: function onpacket(t) {
      if (t.nsp === this.nsp) switch (t.type) {
        case _yt.CONNECT:
          t.data && t.data.sid ? this.onconnect(t.data.sid, t.data.pid) : this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
          break;

        case _yt.EVENT:
        case _yt.BINARY_EVENT:
          this.onevent(t);
          break;

        case _yt.ACK:
        case _yt.BINARY_ACK:
          this.onack(t);
          break;

        case _yt.DISCONNECT:
          this.ondisconnect();
          break;

        case _yt.CONNECT_ERROR:
          this.destroy();

          var _s10 = new Error(t.data.message);

          _s10.data = t.data.data, this.emitReserved("connect_error", _s10);
      }
    }
  }, {
    key: "onevent",
    value: function onevent(t) {
      var s = t.data || [];
      null != t.id && s.push(this.ack(t.id)), this.connected ? this.emitEvent(s) : this.receiveBuffer.push(Object.freeze(s));
    }
  }, {
    key: "emitEvent",
    value: function emitEvent(t) {
      if (this.vt && this.vt.length) {
        var _s11 = this.vt.slice();

        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = _s11[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _i16 = _step.value;

            _i16.apply(this, t);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator["return"] != null) {
              _iterator["return"]();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      _get(_getPrototypeOf(Et.prototype), "emit", this).apply(this, t), this.bt && t.length && "string" == typeof t[t.length - 1] && (this.gt = t[t.length - 1]);
    }
  }, {
    key: "ack",
    value: function ack(t) {
      var s = this;
      var i = !1;
      return function () {
        for (var _len7 = arguments.length, e = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
          e[_key7] = arguments[_key7];
        }

        i || (i = !0, s.packet({
          type: _yt.ACK,
          id: t,
          data: e
        }));
      };
    }
  }, {
    key: "onack",
    value: function onack(t) {
      var s = this.acks[t.id];
      "function" == typeof s && (delete this.acks[t.id], s.withError && t.data.unshift(null), s.apply(this, t.data));
    }
  }, {
    key: "onconnect",
    value: function onconnect(t, s) {
      this.id = t, this.recovered = s && this.bt === s, this.bt = s, this.connected = !0, this.emitBuffered(), this.emitReserved("connect"), this.lt(!0);
    }
  }, {
    key: "emitBuffered",
    value: function emitBuffered() {
      var _this37 = this;

      this.receiveBuffer.forEach(function (t) {
        return _this37.emitEvent(t);
      }), this.receiveBuffer = [], this.sendBuffer.forEach(function (t) {
        _this37.notifyOutgoingListeners(t), _this37.packet(t);
      }), this.sendBuffer = [];
    }
  }, {
    key: "ondisconnect",
    value: function ondisconnect() {
      this.destroy(), this.onclose("io server disconnect");
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.subs && (this.subs.forEach(function (t) {
        return t();
      }), this.subs = void 0), this.io.kt(this);
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      return this.connected && this.packet({
        type: _yt.DISCONNECT
      }), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
    }
  }, {
    key: "close",
    value: function close() {
      return this.disconnect();
    }
  }, {
    key: "compress",
    value: function compress(t) {
      return this.flags.compress = t, this;
    }
  }, {
    key: "timeout",
    value: function timeout(t) {
      return this.flags.timeout = t, this;
    }
  }, {
    key: "onAny",
    value: function onAny(t) {
      return this.vt = this.vt || [], this.vt.push(t), this;
    }
  }, {
    key: "prependAny",
    value: function prependAny(t) {
      return this.vt = this.vt || [], this.vt.unshift(t), this;
    }
  }, {
    key: "offAny",
    value: function offAny(t) {
      if (!this.vt) return this;

      if (t) {
        var _s12 = this.vt;

        for (var _i17 = 0; _i17 < _s12.length; _i17++) {
          if (t === _s12[_i17]) return _s12.splice(_i17, 1), this;
        }
      } else this.vt = [];

      return this;
    }
  }, {
    key: "listenersAny",
    value: function listenersAny() {
      return this.vt || [];
    }
  }, {
    key: "onAnyOutgoing",
    value: function onAnyOutgoing(t) {
      return this.At = this.At || [], this.At.push(t), this;
    }
  }, {
    key: "prependAnyOutgoing",
    value: function prependAnyOutgoing(t) {
      return this.At = this.At || [], this.At.unshift(t), this;
    }
  }, {
    key: "offAnyOutgoing",
    value: function offAnyOutgoing(t) {
      if (!this.At) return this;

      if (t) {
        var _s13 = this.At;

        for (var _i18 = 0; _i18 < _s13.length; _i18++) {
          if (t === _s13[_i18]) return _s13.splice(_i18, 1), this;
        }
      } else this.At = [];

      return this;
    }
  }, {
    key: "listenersAnyOutgoing",
    value: function listenersAnyOutgoing() {
      return this.At || [];
    }
  }, {
    key: "notifyOutgoingListeners",
    value: function notifyOutgoingListeners(t) {
      if (this.At && this.At.length) {
        var _s14 = this.At.slice();

        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = _s14[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _i19 = _step2.value;

            _i19.apply(this, t.data);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
              _iterator2["return"]();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    }
  }, {
    key: "disconnected",
    get: function get() {
      return !this.connected;
    }
  }, {
    key: "active",
    get: function get() {
      return !!this.subs;
    }
  }, {
    key: "volatile",
    get: function get() {
      return this.flags["volatile"] = !0, this;
    }
  }]);

  return Et;
}(k);

exports.Socket = Et;

function Ot(t) {
  t = t || {}, this.ms = t.min || 100, this.max = t.max || 1e4, this.factor = t.factor || 2, this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0, this.attempts = 0;
}

Ot.prototype.duration = function () {
  var t = this.ms * Math.pow(this.factor, this.attempts++);

  if (this.jitter) {
    var s = Math.random(),
        i = Math.floor(s * this.jitter * t);
    t = 1 & Math.floor(10 * s) ? t + i : t - i;
  }

  return 0 | Math.min(t, this.max);
}, Ot.prototype.reset = function () {
  this.attempts = 0;
}, Ot.prototype.setMin = function (t) {
  this.ms = t;
}, Ot.prototype.setMax = function (t) {
  this.max = t;
}, Ot.prototype.setJitter = function (t) {
  this.jitter = t;
};

var _t =
/*#__PURE__*/
function (_k6) {
  _inherits(_t, _k6);

  function _t(t, s) {
    var _this38;

    _classCallCheck(this, _t);

    var i;
    _this38 = _possibleConstructorReturn(this, _getPrototypeOf(_t).call(this)), _this38.nsps = {}, _this38.subs = [], t && "object" == _typeof(t) && (s = t, t = void 0), (s = s || {}).path = s.path || "/socket.io", _this38.opts = s, x(_assertThisInitialized(_this38), s), _this38.reconnection(!1 !== s.reconnection), _this38.reconnectionAttempts(s.reconnectionAttempts || 1 / 0), _this38.reconnectionDelay(s.reconnectionDelay || 1e3), _this38.reconnectionDelayMax(s.reconnectionDelayMax || 5e3), _this38.randomizationFactor(null !== (i = s.randomizationFactor) && void 0 !== i ? i : .5), _this38.backoff = new Ot({
      min: _this38.reconnectionDelay(),
      max: _this38.reconnectionDelayMax(),
      jitter: _this38.randomizationFactor()
    }), _this38.timeout(null == s.timeout ? 2e4 : s.timeout), _this38.ct = "closed", _this38.uri = t;
    var e = s.parser || mt;
    _this38.encoder = new e.Encoder(), _this38.decoder = new e.Decoder(), _this38.ot = !1 !== s.autoConnect, _this38.ot && _this38.open();
    return _this38;
  }

  _createClass(_t, [{
    key: "reconnection",
    value: function reconnection(t) {
      return arguments.length ? (this.Et = !!t, t || (this.skipReconnect = !0), this) : this.Et;
    }
  }, {
    key: "reconnectionAttempts",
    value: function reconnectionAttempts(t) {
      return void 0 === t ? this.Ot : (this.Ot = t, this);
    }
  }, {
    key: "reconnectionDelay",
    value: function reconnectionDelay(t) {
      var s;
      return void 0 === t ? this._t : (this._t = t, null === (s = this.backoff) || void 0 === s || s.setMin(t), this);
    }
  }, {
    key: "randomizationFactor",
    value: function randomizationFactor(t) {
      var s;
      return void 0 === t ? this.jt : (this.jt = t, null === (s = this.backoff) || void 0 === s || s.setJitter(t), this);
    }
  }, {
    key: "reconnectionDelayMax",
    value: function reconnectionDelayMax(t) {
      var s;
      return void 0 === t ? this.xt : (this.xt = t, null === (s = this.backoff) || void 0 === s || s.setMax(t), this);
    }
  }, {
    key: "timeout",
    value: function timeout(t) {
      return arguments.length ? (this.Bt = t, this) : this.Bt;
    }
  }, {
    key: "maybeReconnectOnOpen",
    value: function maybeReconnectOnOpen() {
      !this.ht && this.Et && 0 === this.backoff.attempts && this.reconnect();
    }
  }, {
    key: "open",
    value: function open(t) {
      var _this39 = this;

      if (~this.ct.indexOf("open")) return this;
      this.engine = new tt(this.uri, this.opts);
      var s = this.engine,
          i = this;
      this.ct = "opening", this.skipReconnect = !1;

      var e = kt(s, "open", function () {
        i.onopen(), t && t();
      }),
          n = function n(s) {
        _this39.cleanup(), _this39.ct = "closed", _this39.emitReserved("error", s), t ? t(s) : _this39.maybeReconnectOnOpen();
      },
          r = kt(s, "error", n);

      if (!1 !== this.Bt) {
        var _t20 = this.Bt,
            _i20 = this.setTimeoutFn(function () {
          e(), n(new Error("timeout")), s.close();
        }, _t20);

        this.opts.autoUnref && _i20.unref(), this.subs.push(function () {
          _this39.clearTimeoutFn(_i20);
        });
      }

      return this.subs.push(e), this.subs.push(r), this;
    }
  }, {
    key: "connect",
    value: function connect(t) {
      return this.open(t);
    }
  }, {
    key: "onopen",
    value: function onopen() {
      this.cleanup(), this.ct = "open", this.emitReserved("open");
      var t = this.engine;
      this.subs.push(kt(t, "ping", this.onping.bind(this)), kt(t, "data", this.ondata.bind(this)), kt(t, "error", this.onerror.bind(this)), kt(t, "close", this.onclose.bind(this)), kt(this.decoder, "decoded", this.ondecoded.bind(this)));
    }
  }, {
    key: "onping",
    value: function onping() {
      this.emitReserved("ping");
    }
  }, {
    key: "ondata",
    value: function ondata(t) {
      try {
        this.decoder.add(t);
      } catch (t) {
        this.onclose("parse error", t);
      }
    }
  }, {
    key: "ondecoded",
    value: function ondecoded(t) {
      var _this40 = this;

      A(function () {
        _this40.emitReserved("packet", t);
      }, this.setTimeoutFn);
    }
  }, {
    key: "onerror",
    value: function onerror(t) {
      this.emitReserved("error", t);
    }
  }, {
    key: "socket",
    value: function socket(t, s) {
      var i = this.nsps[t];
      return i ? this.ot && !i.active && i.connect() : (i = new Et(this, t, s), this.nsps[t] = i), i;
    }
  }, {
    key: "kt",
    value: function kt(t) {
      var s = Object.keys(this.nsps);

      for (var _i21 = 0, _s15 = s; _i21 < _s15.length; _i21++) {
        var _t21 = _s15[_i21];
        if (this.nsps[_t21].active) return;
      }

      this.Ct();
    }
  }, {
    key: "dt",
    value: function dt(t) {
      var s = this.encoder.encode(t);

      for (var _i22 = 0; _i22 < s.length; _i22++) {
        this.engine.write(s[_i22], t.options);
      }
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      this.subs.forEach(function (t) {
        return t();
      }), this.subs.length = 0, this.decoder.destroy();
    }
  }, {
    key: "Ct",
    value: function Ct() {
      this.skipReconnect = !0, this.ht = !1, this.onclose("forced close");
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      return this.Ct();
    }
  }, {
    key: "onclose",
    value: function onclose(t, s) {
      var i;
      this.cleanup(), null === (i = this.engine) || void 0 === i || i.close(), this.backoff.reset(), this.ct = "closed", this.emitReserved("close", t, s), this.Et && !this.skipReconnect && this.reconnect();
    }
  }, {
    key: "reconnect",
    value: function reconnect() {
      var _this41 = this;

      if (this.ht || this.skipReconnect) return this;
      var t = this;
      if (this.backoff.attempts >= this.Ot) this.backoff.reset(), this.emitReserved("reconnect_failed"), this.ht = !1;else {
        var _s16 = this.backoff.duration();

        this.ht = !0;

        var _i23 = this.setTimeoutFn(function () {
          t.skipReconnect || (_this41.emitReserved("reconnect_attempt", t.backoff.attempts), t.skipReconnect || t.open(function (s) {
            s ? (t.ht = !1, t.reconnect(), _this41.emitReserved("reconnect_error", s)) : t.onreconnect();
          }));
        }, _s16);

        this.opts.autoUnref && _i23.unref(), this.subs.push(function () {
          _this41.clearTimeoutFn(_i23);
        });
      }
    }
  }, {
    key: "onreconnect",
    value: function onreconnect() {
      var t = this.backoff.attempts;
      this.ht = !1, this.backoff.reset(), this.emitReserved("reconnect", t);
    }
  }]);

  return _t;
}(k);

exports.Manager = _t;
var jt = {};

function xt(t, s) {
  "object" == _typeof(t) && (s = t, t = void 0);

  var i = function (t) {
    var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    var i = arguments.length > 2 ? arguments[2] : undefined;
    var e = t;
    i = i || "undefined" != typeof location && location, null == t && (t = i.protocol + "//" + i.host), "string" == typeof t && ("/" === t.charAt(0) && (t = "/" === t.charAt(1) ? i.protocol + t : i.host + t), /^(https?|wss?):\/\//.test(t) || (t = void 0 !== i ? i.protocol + "//" + t : "https://" + t), e = Q(t)), e.port || (/^(http|ws)$/.test(e.protocol) ? e.port = "80" : /^(http|ws)s$/.test(e.protocol) && (e.port = "443")), e.path = e.path || "/";
    var n = -1 !== e.host.indexOf(":") ? "[" + e.host + "]" : e.host;
    return e.id = e.protocol + "://" + n + ":" + e.port + s, e.href = e.protocol + "://" + n + (i && i.port === e.port ? "" : ":" + e.port), e;
  }(t, (s = s || {}).path || "/socket.io"),
      e = i.source,
      n = i.id,
      r = i.path,
      o = jt[n] && r in jt[n].nsps;

  var h;
  return s.forceNew || s["force new connection"] || !1 === s.multiplex || o ? h = new _t(e, s) : (jt[n] || (jt[n] = new _t(e, s)), h = jt[n]), i.query && !s.query && (s.query = i.queryKey), h.socket(i.path, s);
}

Object.assign(xt, {
  Manager: _t,
  Socket: Et,
  io: xt,
  connect: xt
});